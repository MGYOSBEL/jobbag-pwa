import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';
import { Project, ProjectState } from '../models/project.model';
import { CandidateProjectService } from '../services/candidate-project.service';
import { timeInterval } from 'rxjs/operators';
import { interval } from 'rxjs';
<<<<<<< HEAD
import { UserService } from '@app/user/services/user.service';
=======
import { Router, ActivatedRoute, NavigationEnd } from '@angular/router'; //toEdit
>>>>>>> bea614830335156b9d9cbd6199363136432bbfd6

@Component({
  selector: 'app-project-card',
  templateUrl: './project-card.component.html',
  styleUrls: ['./project-card.component.css']
})
export class ProjectCardComponent implements OnInit {

  @Input()
  project: Project;

  @Output() checked = new EventEmitter<{ state: boolean, projectId: number }>();

  @Output() clicked = new EventEmitter<number>();

  @Input()
  cardSelected: boolean;

  @Input()
  cardMode: 'WIDE' | 'COMPACT';

<<<<<<< HEAD
  private userRole: string;
=======
  constructor(
    private route: ActivatedRoute, //toEdit
    private router: Router){} //toEdit)
  
>>>>>>> bea614830335156b9d9cbd6199363136432bbfd6

  constructor(
    private userService: UserService
  ) { }

  ngOnInit() {
    this.userRole = this.userService.role;
    console.log(this.userService.role);
  }

  onClick() {
    this.clicked.emit(this.project.id);
  }

  onCheck(event) {
    this.checked.emit({
      state: event.target.checked,
      projectId: this.project.id
    });
    if (this.cardMode === 'WIDE') {
      this.clicked.emit(this.project.id);
    }
  }

  getColor() {
    if (this.project.interest) {
      return 'solid 8px  #2788c7';
    }
    switch (this.project.state) {
      case ProjectState.NEW:
        return 'solid 8px #7bcff4';
      case ProjectState.PROGRESS:
        return 'solid 8px #a1d173';
      case ProjectState.FINISH:
        return 'solid 8px #f99d6e';
      case ProjectState.CANCEL:
        return 'solid 8px #f15d5d';

      default:
        break;
    }
  }

  checkCard(state: boolean) {
    this.cardSelected = state;
    this.checked.emit({
      state,
      projectId: this.project.id
    });
  }

<<<<<<< HEAD
=======
  onEditProject(){
    this.router.navigateByUrl(`/project/id/edit`);
  }
>>>>>>> bea614830335156b9d9cbd6199363136432bbfd6


}
